basic = a-basic-value

unicode = a-value-with-unicode-character-(\u221A9=3)

embedded = resolved-via-a
property-expression = a-value-${embedded}-property-expression

environment-variable = a-value-with-environment-variable-${USERNAME}

environment-variable-or-default = a-value-where-non-existing-environment-variable-is-replaced-${UNEXISTING_ENV_VAR:by-a-default-value}

default-value = with-a-default-value-resolved-via-a-property-expression
environment-variable-or-default-via-property-expression = a-value-where-non-existing-environment-variable-is-replaced-${UNEXISTING_ENV_VAR:${default-value}}

escape-dollar-to-avoid-property-resolution = $${date:now}

# It seems there is a first level with java.util.Properties.read(...)
# So,  java.util.Properties escape sequence are working great, and \u0024 is parsed as "$"
# https://docs.oracle.com/javase/7/docs/api/java/util/Properties.html
# 
# And then a second with io.smallrye.common.expression.Expression.parseString(...)
# https://github.com/smallrye/smallrye-common/blob/0b59733491ff936808cd26a4b300f11fe3f2a5f0/expression/src/main/java/io/smallrye/common/expression/Expression.java#L245

# Put an example with fancy chars ?